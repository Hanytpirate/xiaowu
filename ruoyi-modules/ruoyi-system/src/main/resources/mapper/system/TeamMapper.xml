<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TeamMapper">

    <resultMap type="Team" id="TeamResult">
        <result property="teamId"    column="team_id"    />
        <result property="leaderUid"    column="leader_uid"    />
        <result property="teamName"    column="team_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>
    <resultMap type="SysUser" id="UserResult">
        <id     property="userId"       column="user_id"      />
        <result property="userName"     column="user_name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phonenumber"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
    </resultMap>
    <sql id="selectTeamVo">
        select t.team_id, t.leader_uid, t.team_name, t.create_time, t.remark
        from xiaowu_team t
    </sql>

    <select id="selectTeamList" parameterType="Team" resultMap="TeamResult">
        <include refid="selectTeamVo"/>
        <where>
            <if test="teamId != null "> and t.team_id = #{teamId}</if>
            <if test="leaderUid != null "> and t.leader_uid = #{leaderUid}</if>
            <if test="teamName != null  and teamName != ''"> and t.team_name like concat('%', #{teamName}, '%')</if>
            ${params.dataScope}
        </where>
    </select>

    <select id="selectTeamByTeamId" parameterType="Team" resultMap="TeamResult">
        <include refid="selectTeamVo"/>
        where t.team_id = #{teamId}
        ${params.dataScope}
    </select>
    <select id="selectTeamUserList" parameterType="Map" resultMap="UserResult">
        SELECT user_id, user_name, nick_name, email, phonenumber, sex,avatar, STATUS, del_flag
        FROM sys_user
        WHERE
            user_id <if test="unassign">NOT</if> IN (
                SELECT
                    user_id
                FROM
                    xiaowu_team_user
                WHERE
                    team_id = #{teamId}
                )
            <if test="sysUser.userName != null and sysUser.userName != ''">
                AND user_name like concat('%', #{sysUser.userName}, '%')
            </if>
            <if test="sysUser.phonenumber != null and sysUser.phonenumber != ''">
                AND phonenumber like concat('%', #{sysUser.phonenumber}, '%')
            </if>
    </select>
    <insert id="insertTeam" parameterType="Team" useGeneratedKeys="true" keyProperty="teamId">
        insert into xiaowu_team
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="leaderUid != null">leader_uid,</if>
            <if test="teamName != null">team_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="leaderUid != null">#{leaderUid},</if>
            <if test="teamName != null">#{teamName},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateTeam" parameterType="Team">
        update xiaowu_team
        <trim prefix="SET" suffixOverrides=",">
            <if test="leaderUid != null">leader_uid = #{leaderUid},</if>
            <if test="teamName != null">team_name = #{teamName},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where team_id = #{teamId}
    </update>

    <delete id="deleteTeamByTeamId" parameterType="Long">
        delete from xiaowu_team where team_id = #{teamId}
    </delete>

    <delete id="deleteTeamByTeamIds" parameterType="String">
        delete from xiaowu_team where team_id in
        <foreach item="teamId" collection="array" open="(" separator="," close=")">
            #{teamId}
        </foreach>
    </delete>

</mapper>
